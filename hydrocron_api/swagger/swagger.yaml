openapi: 3.0.0
info:
  title: "Get time series data from SWOT observations for reaches, nodes, and/or lakes"
  description: "Get time series data from SWOT observations for reaches, nodes, and/or\
    \ lakes"
  version: 1.0.0
servers:
- url: https://virtserver.swaggerhub.com/hydrocron/HydroAPI/1.0.0
  description: "Get time series data from SWOT observations for reaches, nodes, and/or\
    \ lakes"
paths:
  /timeseries:
    get:
      summary: "Get Timeseries for a particular Reach, Node, or LakeID"
      description: "Get Timeseries for a particular Reach, Node, or LakeID"
      operationId: gettimeseries_get
      parameters:
      - name: feature
        in: query
        description: Data requested for Reach or Node or Lake
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum: [ "Reach", "Lake", "Node"]
        example: Reach
      - name: feature_id
        in: query
        description: ID of the feature to retrieve in format CBBTTTSNNNNNN (i.e. 74297700000000)
        required: true
        style: form
        explode: true
        schema:
          type: string
        example: 71224100223
      - name: start_time
        in: query
        description: Start time of the timeseries
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-08-04T00:00:00Z
      - name: end_time
        in: query
        description: End time of the timeseries
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-08-23T00:00:00Z
      - name: output
        in: query
        description: Format of the data returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum: [ "csv", "geojson"]
          default: geojson
        example: geojson
      - name: fields
        in: query
        description: Format of the data returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: feature_id, time_str, wse, geometry
        example: feature_id, time_str, wse, geometry
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: "400 error. The specified URL is invalid (does not exist)."
          content:
            text/csv:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: "404 error. An entry with the specified region was not found."
          content:
            text/csv:
              schema:
                type: array
                items:
                  type: string
        "413":
          description: "413 error. Your query has returned is too large."
          content:
            text/csv:
              schema:
                type: array
                items:
                  type: string
      x-openapi-router-controller: hydrocronapi.controllers.timeseries
  /timeseriesSubset:
    get:
      summary: Subset by time series for a given spatial region
      description: "Get Timeseries for a particular Reach, Node, or LakeID"
      operationId: getsubset_get
      parameters:
      - name: feature
        in: query
        description: Data requested for Reach or Node or Lake
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum: [ "Reach", "Lake", "Node"]
        example: Reach
      - name: subsetpolygon
        in: query
        description: GEOJSON of the subset area
        required: false
        style: form
        explode: true
        schema:
          type: string
        example: '{"features": [{"type": "Feature","geometry": {"coordinates": [[-95.6499095054704,50.323685647314554],[-95.3499095054704,50.323685647314554],[-95.3499095054704,50.19088502467528],[-95.6499095054704,50.19088502467528],[-95.6499095054704,50.323685647314554]],"type": "LineString"},"properties": {}}],"type": "FeatureCollection"}'
      - name: start_time
        in: query
        description: Start time of the timeseries
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-08-04T00:00:00Z
      - name: end_time
        in: query
        description: End time of the timeseries
        required: true
        style: form
        explode: true
        schema:
          type: string
          format: date-time
        example: 2022-08-23T00:00:00Z
      - name: output
        in: query
        description: Format of the data returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum: [ "csv", "geojson"]
          default: geojson
        example: geojson
      - name: fields
        in: query
        description: Format of the data returned
        required: false
        style: form
        explode: true
        schema:
          type: string
          default: feature_id, time_str, wse, geometry
        example: feature_id, time_str, wse, geometry
      responses:
        "200":
          description: OK
          content:
            text/csv:
              schema:
                type: array
                items:
                  type: string
        "400":
          description: "400 error. The specified URL is invalid (does not exist)."
          content:
            text/csv:
              schema:
                type: array
                items:
                  type: string
        "404":
          description: "404 error. An entry with the specified region was not found."
          content:
            text/csv:
              schema:
                type: array
                items:
                  type: string
        "413":
          description: "413 error. Your query has returned is too large."
          content:
            text/csv:
              schema:
                type: array
                items:
                  type: string
      x-openapi-router-controller: hydrocronapi.controllers.subset

